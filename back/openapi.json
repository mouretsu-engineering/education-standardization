{
  "openapi": "3.1.0",
  "info": {
    "title": "aiUnit",
    "description": "Apps link<br>/docs<br><a href='/admin/docs'>/admin/docs</a>",
    "version": "0.0.1"
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["info"],
        "summary": "Get Info",
        "operationId": "get_info__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Get Info  Get"
                }
              }
            }
          }
        }
      }
    },
    "/admin/hoge": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get Admin Hoge",
        "operationId": "get_admin_hoge",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Get Admin Hoge"
                }
              }
            }
          }
        }
      }
    },
    "/answer_contents": {
      "get": {
        "tags": ["Answer_contents"],
        "summary": "Get Answer Contents",
        "operationId": "get_answer_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerContentResponse"
                  },
                  "title": "Response Get Answer Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Answer_contents"],
        "summary": "Create Answer Contents",
        "operationId": "create_answer_contents",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnswerContentCreate"
                },
                "title": "Data In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerContentResponse"
                  },
                  "title": "Response Create Answer Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_contents/paged": {
      "get": {
        "tags": ["Answer_contents"],
        "summary": "Get Paged Answer Contents",
        "operationId": "get_paged_answer_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnswerContentSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerContentsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_contents/{id}": {
      "get": {
        "tags": ["Answer_contents"],
        "summary": "Get Answer Content By Id",
        "operationId": "get_answer_content_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Answer_contents"],
        "summary": "Update Answer Content",
        "operationId": "update_answer_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Answer_contents"],
        "summary": "Delete Answer Content",
        "operationId": "delete_answer_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generation_flow_inputs": {
      "post": {
        "tags": ["Answer_generation_flow_inputs"],
        "summary": "Create Answer Generation Flow Inputs",
        "operationId": "create_answer_generation_flow_inputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowInputCreate"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AnswerGenerationFlowInputResponse"
                  },
                  "type": "array",
                  "title": "Response Create Answer Generation Flow Inputs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generation_flow_inputs/{id}": {
      "patch": {
        "tags": ["Answer_generation_flow_inputs"],
        "summary": "Update Answer Generation Flow Input",
        "operationId": "update_answer_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerGenerationFlowInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Answer_generation_flow_inputs"],
        "summary": "Delete Answer Generation Flow Input",
        "operationId": "delete_answer_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generation_flows": {
      "get": {
        "tags": ["Answer_generation_flows"],
        "summary": "Get Answer Generation Flows",
        "operationId": "get_answer_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "business_menu_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Business Menu Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerGenerationFlowResponse"
                  },
                  "title": "Response Get Answer Generation Flows"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Answer_generation_flows"],
        "summary": "Create Answer Generation Flow",
        "operationId": "create_answer_generation_flow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerGenerationFlowCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerGenerationFlowCreateResponse"
                  },
                  "title": "Response Create Answer Generation Flow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generation_flows/paged": {
      "get": {
        "tags": ["Answer_generation_flows"],
        "summary": "Get Paged Answer Generation Flows",
        "operationId": "get_paged_answer_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnswerGenerationFlowSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generation_flows/{id}": {
      "get": {
        "tags": ["Answer_generation_flows"],
        "summary": "Get Answer Generation Flow By Id",
        "operationId": "get_answer_generation_flow_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Answer_generation_flows"],
        "summary": "Update Answer Generation Flow",
        "operationId": "update_answer_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerGenerationFlowUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Answer_generation_flows"],
        "summary": "Delete Answer Generation Flow",
        "operationId": "delete_answer_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_generations/generate_answer": {
      "post": {
        "tags": ["Answer_generations"],
        "summary": "Generate Answer",
        "operationId": "generate_answer_answer_generations_generate_answer_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate Answer Answer Generations Generate Answer Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_rag_inputs": {
      "post": {
        "tags": ["Answer_rag_inputs"],
        "summary": "Create Answer Rag Inputs",
        "operationId": "create_answer_rag_inputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/AnswerRagInputCreate"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AnswerRagInputResponse"
                  },
                  "type": "array",
                  "title": "Response Create Answer Rag Inputs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/answer_rag_inputs/{id}": {
      "patch": {
        "tags": ["Answer_rag_inputs"],
        "summary": "Update Answer Rag Input",
        "operationId": "update_answer_rag_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerRagInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerRagInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Answer_rag_inputs"],
        "summary": "Delete Answer Rag Input",
        "operationId": "delete_answer_rag_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get Applications",
        "operationId": "get_applications",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResponse"
                  },
                  "title": "Response Get Applications"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Applications"],
        "summary": "Create Application",
        "operationId": "create_application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/applications/paged": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get Paged Applications",
        "operationId": "get_paged_applications",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ApplicationSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": ["Applications"],
        "summary": "Get Application By Id",
        "operationId": "get_application_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Applications"],
        "summary": "Update Application",
        "operationId": "update_application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Applications"],
        "summary": "Delete Application",
        "operationId": "delete_application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_menu_items": {
      "get": {
        "tags": ["Business_menu_items"],
        "summary": "Get Business Menu Items",
        "operationId": "get_business_menu_items",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessMenuItemResponse"
                  },
                  "title": "Response Get Business Menu Items"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Business_menu_items"],
        "summary": "Create Business Menu Item",
        "operationId": "create_business_menu_item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessMenuItemCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_menu_items/{id}": {
      "get": {
        "tags": ["Business_menu_items"],
        "summary": "Get Business Menu Item By Id",
        "operationId": "get_business_menu_item_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Business_menu_items"],
        "summary": "Update Business Menu Item",
        "operationId": "update_business_menu_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessMenuItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Business_menu_items"],
        "summary": "Delete Business Menu Item",
        "operationId": "delete_business_menu_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_menus": {
      "get": {
        "tags": ["Business_menus"],
        "summary": "Get Business Menus",
        "operationId": "get_business_menus",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessMenuResponse"
                  },
                  "title": "Response Get Business Menus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Business_menus"],
        "summary": "Create Business Menu",
        "operationId": "create_business_menu",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessMenuCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_menus/{id}": {
      "get": {
        "tags": ["Business_menus"],
        "summary": "Get Business Menu By Id",
        "operationId": "get_business_menu_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Business_menus"],
        "summary": "Update Business Menu",
        "operationId": "update_business_menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessMenuUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMenuResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Business_menus"],
        "summary": "Delete Business Menu",
        "operationId": "delete_business_menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/business_menus/{id}/business_menu_items": {
      "get": {
        "tags": ["Business_menus"],
        "summary": "Get Business Menu Items Of Business Menu",
        "operationId": "get_business_menu_items_of_business_menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessMenuItemResponse"
                  },
                  "title": "Response Get Business Menu Items Of Business Menu"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get Courses",
        "operationId": "get_courses",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseResponse"
                  },
                  "title": "Response Get Courses"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Courses"],
        "summary": "Create Course",
        "operationId": "create_course",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get Course By Id",
        "operationId": "get_course_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Courses"],
        "summary": "Update Course",
        "operationId": "update_course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Courses"],
        "summary": "Delete Course",
        "operationId": "delete_course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}/subjects": {
      "get": {
        "tags": ["Courses"],
        "summary": "Get Subjects Of Course",
        "operationId": "get_subjects_of_course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectResponse"
                  },
                  "title": "Response Get Subjects Of Course"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "tags": ["Departments"],
        "summary": "Get Departments",
        "operationId": "get_departments",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentResponse"
                  },
                  "title": "Response Get Departments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Departments"],
        "summary": "Create Department",
        "operationId": "create_department",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "tags": ["Departments"],
        "summary": "Get Department By Id",
        "operationId": "get_department_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Departments"],
        "summary": "Update Department",
        "operationId": "update_department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Departments"],
        "summary": "Delete Department",
        "operationId": "delete_department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}/divisions": {
      "get": {
        "tags": ["Departments"],
        "summary": "Get Divisions Of Department",
        "operationId": "get_divisions_of_department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DivisionResponse"
                  },
                  "title": "Response Get Divisions Of Department"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/develop/error": {
      "get": {
        "tags": ["Develop"],
        "summary": "Exec Error",
        "operationId": "exec_error_develop_error_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/develop/error2": {
      "get": {
        "tags": ["Develop"],
        "summary": "Exec Error2",
        "operationId": "exec_error2_develop_error2_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/develop/request-info": {
      "get": {
        "tags": ["Develop"],
        "summary": "Get Request Info",
        "operationId": "get_request_info_develop_request_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/divisions": {
      "get": {
        "tags": ["Divisions"],
        "summary": "Get Divisions",
        "operationId": "get_divisions",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DivisionResponse"
                  },
                  "title": "Response Get Divisions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Divisions"],
        "summary": "Create Division",
        "operationId": "create_division",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DivisionCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/divisions/{id}": {
      "get": {
        "tags": ["Divisions"],
        "summary": "Get Division By Id",
        "operationId": "get_division_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DivisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Divisions"],
        "summary": "Update Division",
        "operationId": "update_division",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DivisionUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Divisions"],
        "summary": "Delete Division",
        "operationId": "delete_division",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/divisions/{id}/business_menus": {
      "get": {
        "tags": ["Divisions"],
        "summary": "Get Business Menus Of Division",
        "operationId": "get_business_menus_of_division",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessMenuResponse"
                  },
                  "title": "Response Get Business Menus Of Division"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/educational_materials": {
      "get": {
        "tags": ["Educational_materials"],
        "summary": "Get Educational Materials",
        "operationId": "get_educational_materials",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EducationalMaterialResponse"
                  },
                  "title": "Response Get Educational Materials"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Educational_materials"],
        "summary": "Create Educational Material",
        "operationId": "create_educational_material",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_educational_material"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/educational_materials/{id}": {
      "get": {
        "tags": ["Educational_materials"],
        "summary": "Get Educational Material By Id",
        "operationId": "get_educational_material_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Educational_materials"],
        "summary": "Update Educational Material",
        "operationId": "update_educational_material",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_update_educational_material"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Educational_materials"],
        "summary": "Delete Educational Material",
        "operationId": "delete_educational_material",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/educational_materials/vertex": {
      "post": {
        "tags": ["Educational_materials"],
        "summary": "Educational Material Vertex",
        "operationId": "educational_material_vertex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalMaterialVertexRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Educational Material Vertex"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_answers/paged": {
      "get": {
        "tags": ["Generated_answers"],
        "summary": "Get Paged Generated Answers",
        "operationId": "get_paged_generated_answers",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/GeneratedAnswerSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedAnswersPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_answers/{id}": {
      "get": {
        "tags": ["Generated_answers"],
        "summary": "Get Generated Answer By Id",
        "operationId": "get_generated_answer_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedAnswerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Generated_answers"],
        "summary": "Delete Generated Answer",
        "operationId": "delete_generated_answer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_answers": {
      "post": {
        "tags": ["Generated_answers"],
        "summary": "Create Generated Answers",
        "operationId": "create_generated_answers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GeneratedAnswerCreateRequest"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GeneratedAnswerCreateResponse"
                  },
                  "type": "array",
                  "title": "Response Create Generated Answers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_questions/paged": {
      "get": {
        "tags": ["Generated_questions"],
        "summary": "Get Paged Generated Questions",
        "operationId": "get_paged_generated_questions",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/GeneratedQuestionSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedQuestionsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_questions/{id}": {
      "get": {
        "tags": ["Generated_questions"],
        "summary": "Get Generated Question By Id",
        "operationId": "get_generated_question_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Generated_questions"],
        "summary": "Delete Generated Question",
        "operationId": "delete_generated_question",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_questions": {
      "post": {
        "tags": ["Generated_questions"],
        "summary": "Create Generated Questions",
        "operationId": "create_generated_questions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GeneratedQuestionCreateRequest"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GeneratedQuestionCreateResponse"
                  },
                  "type": "array",
                  "title": "Response Create Generated Questions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_texts/paged": {
      "get": {
        "tags": ["Generated_texts"],
        "summary": "Get Paged Generated Texts",
        "operationId": "get_paged_generated_texts",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/GeneratedTextSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedTextsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_texts/{id}": {
      "get": {
        "tags": ["Generated_texts"],
        "summary": "Get Generated Text By Id",
        "operationId": "get_generated_text_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedTextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Generated_texts"],
        "summary": "Delete Generated Text",
        "operationId": "delete_generated_text",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generated_texts": {
      "post": {
        "tags": ["Generated_texts"],
        "summary": "Create Generated Texts",
        "operationId": "create_generated_texts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GeneratedTextCreateRequest"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GeneratedTextCreateResponse"
                  },
                  "type": "array",
                  "title": "Response Create Generated Texts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram/post": {
      "post": {
        "tags": ["Instagram"],
        "summary": "Post Instagram",
        "operationId": "post_instagram_instagram_post_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstagramRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_post_media": {
      "post": {
        "tags": ["Instagram_post_media"],
        "summary": "Create Instagram Post Media",
        "operationId": "create_instagram_post_media",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_instagram_post_media"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InstagramPostMediaResponse"
                  },
                  "type": "array",
                  "title": "Response Create Instagram Post Media"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_post_media/{id}": {
      "patch": {
        "tags": ["Instagram_post_media"],
        "summary": "Update Instagram Post Media",
        "operationId": "update_instagram_post_media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_instagram_post_media"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostMediaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Instagram_post_media"],
        "summary": "Delete Instagram Post Media",
        "operationId": "delete_instagram_post_media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_post_reservations/paged": {
      "get": {
        "tags": ["Instagram_post_reservations"],
        "summary": "Get Paged Instagram Post Reservations",
        "operationId": "get_paged_instagram_post_reservations",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/InstagramPostReservationsSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostReservationsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_post_reservations/{id}": {
      "get": {
        "tags": ["Instagram_post_reservations"],
        "summary": "Get Instagram Post Reservation By Id",
        "operationId": "get_instagram_post_reservation_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostReservationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Instagram_post_reservations"],
        "summary": "Update Instagram Post Reservation",
        "operationId": "update_instagram_post_reservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstagramPostReservationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostReservationUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Instagram_post_reservations"],
        "summary": "Delete Instagram Post Reservation",
        "operationId": "delete_instagram_post_reservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_post_reservations": {
      "post": {
        "tags": ["Instagram_post_reservations"],
        "summary": "Create Instagram Post Reservation",
        "operationId": "create_instagram_post_reservation",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_instagram_post_reservation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostReservationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instagram_posts/{id}": {
      "patch": {
        "tags": ["Instagram_posts"],
        "summary": "Update Instagram Post",
        "operationId": "update_instagram_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstagramPostUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramPostUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/learning_ranges": {
      "get": {
        "tags": ["Learning_ranges"],
        "summary": "Get Learning Ranges",
        "operationId": "get_learning_ranges",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningRangeResponse"
                  },
                  "title": "Response Get Learning Ranges"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Learning_ranges"],
        "summary": "Create Learning Range",
        "operationId": "create_learning_range",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningRangeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningRangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/learning_ranges/{id}": {
      "get": {
        "tags": ["Learning_ranges"],
        "summary": "Get Learning Range By Id",
        "operationId": "get_learning_range_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningRangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Learning_ranges"],
        "summary": "Update Learning Range",
        "operationId": "update_learning_range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LearningRangeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningRangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Learning_ranges"],
        "summary": "Delete Learning Range",
        "operationId": "delete_learning_range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/learning_ranges/{id}/educational_materials": {
      "get": {
        "tags": ["Learning_ranges"],
        "summary": "Get Educational Materials Of Learning Range",
        "operationId": "get_educational_materials_of_learning_range",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EducationalMaterialResponse"
                  },
                  "title": "Response Get Educational Materials Of Learning Range"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_contents": {
      "get": {
        "tags": ["Question_contents"],
        "summary": "Get Question Contents",
        "operationId": "get_question_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionContentResponse"
                  },
                  "title": "Response Get Question Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Question_contents"],
        "summary": "Create Question Contents",
        "operationId": "create_question_contents",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QuestionContentCreate"
                },
                "title": "Data In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionContentResponse"
                  },
                  "title": "Response Create Question Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_contents/paged": {
      "get": {
        "tags": ["Question_contents"],
        "summary": "Get Paged Question Contents",
        "operationId": "get_paged_question_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/QuestionContentSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionContentsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_contents/{id}": {
      "get": {
        "tags": ["Question_contents"],
        "summary": "Get Question Content By Id",
        "operationId": "get_question_content_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Question_contents"],
        "summary": "Update Question Content",
        "operationId": "update_question_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Question_contents"],
        "summary": "Delete Question Content",
        "operationId": "delete_question_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generation_flow_inputs": {
      "post": {
        "tags": ["Question_generation_flow_inputs"],
        "summary": "Create Question Generation Flow Inputs",
        "operationId": "create_question_generation_flow_inputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowInputCreate"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QuestionGenerationFlowInputResponse"
                  },
                  "type": "array",
                  "title": "Response Create Question Generation Flow Inputs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generation_flow_inputs/{id}": {
      "patch": {
        "tags": ["Question_generation_flow_inputs"],
        "summary": "Update Question Generation Flow Input",
        "operationId": "update_question_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGenerationFlowInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Question_generation_flow_inputs"],
        "summary": "Delete Question Generation Flow Input",
        "operationId": "delete_question_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generation_flows": {
      "get": {
        "tags": ["Question_generation_flows"],
        "summary": "Get Question Generation Flows",
        "operationId": "get_question_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "business_menu_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Business Menu Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionGenerationFlowResponse"
                  },
                  "title": "Response Get Question Generation Flows"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Question_generation_flows"],
        "summary": "Create Question Generation Flow",
        "operationId": "create_question_generation_flow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGenerationFlowCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionGenerationFlowCreateResponse"
                  },
                  "title": "Response Create Question Generation Flow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generation_flows/paged": {
      "get": {
        "tags": ["Question_generation_flows"],
        "summary": "Get Paged Question Generation Flows",
        "operationId": "get_paged_question_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/QuestionGenerationFlowSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generation_flows/{id}": {
      "get": {
        "tags": ["Question_generation_flows"],
        "summary": "Get Question Generation Flow By Id",
        "operationId": "get_question_generation_flow_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Question_generation_flows"],
        "summary": "Update Question Generation Flow",
        "operationId": "update_question_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGenerationFlowUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Question_generation_flows"],
        "summary": "Delete Question Generation Flow",
        "operationId": "delete_question_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generations/generate_question": {
      "post": {
        "tags": ["Question_generations"],
        "summary": "Generate Question",
        "operationId": "generate_question_question_generations_generate_question_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate Question Question Generations Generate Question Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_generations/generate_qa": {
      "post": {
        "tags": ["Question_generations"],
        "summary": "Generate Qa",
        "operationId": "generate_qa_question_generations_generate_qa_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate Qa Question Generations Generate Qa Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_rag_inputs": {
      "post": {
        "tags": ["Question_rag_inputs"],
        "summary": "Create Question Rag Inputs",
        "operationId": "create_question_rag_inputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/QuestionRagInputCreate"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QuestionRagInputResponse"
                  },
                  "type": "array",
                  "title": "Response Create Question Rag Inputs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/question_rag_inputs/{id}": {
      "patch": {
        "tags": ["Question_rag_inputs"],
        "summary": "Update Question Rag Input",
        "operationId": "update_question_rag_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionRagInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionRagInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Question_rag_inputs"],
        "summary": "Delete Question Rag Input",
        "operationId": "delete_question_rag_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subjects": {
      "get": {
        "tags": ["Subjects"],
        "summary": "Get Subjects",
        "operationId": "get_subjects",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectResponse"
                  },
                  "title": "Response Get Subjects"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Subjects"],
        "summary": "Create Subject",
        "operationId": "create_subject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subjects/{id}": {
      "get": {
        "tags": ["Subjects"],
        "summary": "Get Subject By Id",
        "operationId": "get_subject_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Subjects"],
        "summary": "Update Subject",
        "operationId": "update_subject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Subjects"],
        "summary": "Delete Subject",
        "operationId": "delete_subject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subjects/{id}/learning_ranges": {
      "get": {
        "tags": ["Subjects"],
        "summary": "Get Learning Ranges Of Subject",
        "operationId": "get_learning_ranges_of_subject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningRangeResponse"
                  },
                  "title": "Response Get Learning Ranges Of Subject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teacher_rag_data": {
      "get": {
        "tags": ["Teacher_rag_data"],
        "summary": "Get Teacher Rag Data",
        "operationId": "get_teacher_rag_data",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherRagDataResponse"
                  },
                  "title": "Response Get Teacher Rag Data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teacher_rag_data"],
        "summary": "Create Teacher Rag Data",
        "operationId": "create_teacher_rag_data",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_teacher_rag_data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherRagDataResponse"
                  },
                  "title": "Response Create Teacher Rag Data"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teacher_rag_data/{id}": {
      "get": {
        "tags": ["Teacher_rag_data"],
        "summary": "Get Teacher Rag Data By Id",
        "operationId": "get_teacher_rag_data_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherRagDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Teacher_rag_data"],
        "summary": "Update Teacher Rag Data",
        "operationId": "update_teacher_rag_data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_update_teacher_rag_data"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherRagDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Teacher_rag_data"],
        "summary": "Delete Teacher Rag Data",
        "operationId": "delete_teacher_rag_data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teachers": {
      "get": {
        "tags": ["Teachers"],
        "summary": "Get Teachers",
        "operationId": "get_teachers",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherResponse"
                  },
                  "title": "Response Get Teachers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teachers"],
        "summary": "Create Teacher",
        "operationId": "create_teacher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teachers/{id}": {
      "get": {
        "tags": ["Teachers"],
        "summary": "Get Teacher By Id",
        "operationId": "get_teacher_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Teachers"],
        "summary": "Update Teacher",
        "operationId": "update_teacher",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Teachers"],
        "summary": "Delete Teacher",
        "operationId": "delete_teacher",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teachers/{teacher_id}/courses": {
      "get": {
        "tags": ["Teachers"],
        "summary": "Get Courses By Teacher Id",
        "operationId": "get_courses_by_teacher_id",
        "parameters": [
          {
            "name": "teacher_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Teacher Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseResponse"
                  },
                  "title": "Response Get Courses By Teacher Id"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teachers"],
        "summary": "Update Courses Of Teacher",
        "operationId": "update_courses_of_teacher",
        "parameters": [
          {
            "name": "teacher_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Teacher Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "minItems": 1,
                "title": "Course Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teachers/{teacher_id}/teacher_rag_data": {
      "get": {
        "tags": ["Teachers"],
        "summary": "Get Teacher Rag Data By Teacher Id",
        "operationId": "get_teacher_rag_data_by_teacher_id",
        "parameters": [
          {
            "name": "teacher_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Teacher Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeacherRagDataResponse"
                  },
                  "title": "Response Get Teacher Rag Data By Teacher Id"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/teachers/vertex": {
      "post": {
        "tags": ["Teachers"],
        "summary": "Teacher Vertex",
        "operationId": "teacher_vertex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherVertexRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Teacher Vertex"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_contents": {
      "get": {
        "tags": ["Text_contents"],
        "summary": "Get Text Contents",
        "operationId": "get_text_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextContentResponse"
                  },
                  "title": "Response Get Text Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Text_contents"],
        "summary": "Create Text Contents",
        "operationId": "create_text_contents",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextContentCreate"
                },
                "title": "Data In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextContentResponse"
                  },
                  "title": "Response Create Text Contents"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_contents/paged": {
      "get": {
        "tags": ["Text_contents"],
        "summary": "Get Paged Text Contents",
        "operationId": "get_paged_text_contents",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextContentSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_contents/{id}": {
      "get": {
        "tags": ["Text_contents"],
        "summary": "Get Text Content By Id",
        "operationId": "get_text_content_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Text_contents"],
        "summary": "Update Text Content",
        "operationId": "update_text_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Text_contents"],
        "summary": "Delete Text Content",
        "operationId": "delete_text_content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generation_flow_inputs": {
      "post": {
        "tags": ["Text_generation_flow_inputs"],
        "summary": "Create Text Generation Flow Inputs",
        "operationId": "create_text_generation_flow_inputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/TextGenerationFlowInputCreate"
                },
                "type": "array",
                "title": "Data In"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TextGenerationFlowInputResponse"
                  },
                  "type": "array",
                  "title": "Response Create Text Generation Flow Inputs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generation_flow_inputs/{id}": {
      "patch": {
        "tags": ["Text_generation_flow_inputs"],
        "summary": "Update Text Generation Flow Input",
        "operationId": "update_text_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenerationFlowInputUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenerationFlowInputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Text_generation_flow_inputs"],
        "summary": "Delete Text Generation Flow Input",
        "operationId": "delete_text_generation_flow_input",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generation_flows": {
      "get": {
        "tags": ["Text_generation_flows"],
        "summary": "Get Text Generation Flows",
        "operationId": "get_text_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "business_menu_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Business Menu Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextGenerationFlowResponse"
                  },
                  "title": "Response Get Text Generation Flows"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Text_generation_flows"],
        "summary": "Create Text Generation Flow",
        "operationId": "create_text_generation_flow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenerationFlowCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextGenerationFlowCreateResponse"
                  },
                  "title": "Response Create Text Generation Flow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generation_flows/paged": {
      "get": {
        "tags": ["Text_generation_flows"],
        "summary": "Get Paged Text Generation Flows",
        "operationId": "get_paged_text_generation_flows",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextGenerationFlowSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenerationFlowsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generation_flows/{id}": {
      "get": {
        "tags": ["Text_generation_flows"],
        "summary": "Get Text Generation Flow By Id",
        "operationId": "get_text_generation_flow_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenerationFlowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Text_generation_flows"],
        "summary": "Update Text Generation Flow",
        "operationId": "update_text_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenerationFlowUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenerationFlowUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Text_generation_flows"],
        "summary": "Delete Text Generation Flow",
        "operationId": "delete_text_generation_flow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/text_generations/generate_text": {
      "post": {
        "tags": ["Text_generations"],
        "summary": "Generate Text",
        "operationId": "generate_text_text_generations_generate_text_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate Text Text Generations Generate Text Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Users",
        "operationId": "get_users",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Get Users"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create User",
        "operationId": "create_user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/paged": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Paged Users",
        "operationId": "get_paged_users",
        "parameters": [
          {
            "name": "department_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Department Id"
            }
          },
          {
            "name": "division_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Division Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User By Id",
        "operationId": "get_user_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update User",
        "operationId": "update_user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User",
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/uid/{uid}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User By Uid",
        "operationId": "get_user_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Uid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x/post": {
      "post": {
        "tags": ["X"],
        "summary": "Post X",
        "operationId": "post_x_x_post_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_post_media": {
      "post": {
        "tags": ["X_post_media"],
        "summary": "Create X Post Media",
        "operationId": "create_x_post_media",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_x_post_media"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/XPostMediaResponse"
                  },
                  "type": "array",
                  "title": "Response Create X Post Media"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_post_media/{id}": {
      "patch": {
        "tags": ["X_post_media"],
        "summary": "Update X Post Media",
        "operationId": "update_x_post_media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_x_post_media"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostMediaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["X_post_media"],
        "summary": "Delete X Post Media",
        "operationId": "delete_x_post_media",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_post_reservations/paged": {
      "get": {
        "tags": ["X_post_reservations"],
        "summary": "Get Paged X Post Reservations",
        "operationId": "get_paged_x_post_reservations",
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Perpage"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/XPostReservationsSortFieldEnum"
                },
                {
                  "type": "null"
                }
              ],
              "default": "created_at",
              "title": "Sortfield"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortDirectionEnum"
                }
              ],
              "default": "asc",
              "title": "Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostReservationsPagedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_post_reservations/{id}": {
      "get": {
        "tags": ["X_post_reservations"],
        "summary": "Get X Post Reservation By Id",
        "operationId": "get_x_post_reservation_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostReservationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["X_post_reservations"],
        "summary": "Update X Post Reservation",
        "operationId": "update_x_post_reservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XPostReservationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostReservationUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["X_post_reservations"],
        "summary": "Delete X Post Reservation",
        "operationId": "delete_x_post_reservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_post_reservations": {
      "post": {
        "tags": ["X_post_reservations"],
        "summary": "Create X Post Reservation",
        "operationId": "create_x_post_reservation",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_x_post_reservation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostReservationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/x_posts/{id}": {
      "patch": {
        "tags": ["X_posts"],
        "summary": "Update X Post",
        "operationId": "update_x_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XPostUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/XPostUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnswerContentCreate": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          }
        },
        "type": "object",
        "required": ["answerGenerationFlowId", "userId", "body"],
        "title": "AnswerContentCreate"
      },
      "AnswerContentResponse": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "userId",
          "body",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerContentResponse"
      },
      "AnswerContentSortFieldEnum": {
        "const": "created_at",
        "title": "AnswerContentSortFieldEnum"
      },
      "AnswerContentUpdate": {
        "properties": {
          "answerGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answergenerationflowid"
          },
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "title": "AnswerContentUpdate"
      },
      "AnswerContentsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnswerContentResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AnswerContentsPagedResponse"
      },
      "AnswerGenerationFlow": {
        "properties": {
          "businessMenuItemId": {
            "type": "string",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "answerGenerationFlowInputs": {
            "items": {
              "$ref": "#/components/schemas/AnswerGenerationFlowInputCreateRequest"
            },
            "type": "array",
            "title": "Answergenerationflowinputs"
          },
          "answerRagInput": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnswerRagInputCreateRequest"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "businessMenuItemId",
          "name",
          "answerGenerationFlowInputs"
        ],
        "title": "AnswerGenerationFlow"
      },
      "AnswerGenerationFlowCreateRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "title": "Applicationid"
          },
          "flows": {
            "items": {
              "$ref": "#/components/schemas/AnswerGenerationFlow"
            },
            "type": "array",
            "title": "Flows"
          }
        },
        "type": "object",
        "required": ["userId", "applicationId", "flows"],
        "title": "AnswerGenerationFlowCreateRequest"
      },
      "AnswerGenerationFlowCreateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerGenerationFlowCreateResponse"
      },
      "AnswerGenerationFlowInputCreate": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "title": "Answergenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["answerGenerationFlowId", "key", "value"],
        "title": "AnswerGenerationFlowInputCreate"
      },
      "AnswerGenerationFlowInputCreateRequest": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["key", "value"],
        "title": "AnswerGenerationFlowInputCreateRequest"
      },
      "AnswerGenerationFlowInputResponse": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Answergenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "key",
          "value",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerGenerationFlowInputResponse"
      },
      "AnswerGenerationFlowInputUpdate": {
        "properties": {
          "answerGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answergenerationflowid"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "title": "AnswerGenerationFlowInputUpdate"
      },
      "AnswerGenerationFlowResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponseWithoutRelations"
          },
          "answerGenerationFlowInputs": {
            "items": {
              "$ref": "#/components/schemas/AnswerGenerationFlowInputResponse"
            },
            "type": "array",
            "title": "Answergenerationflowinputs"
          },
          "answerRagInputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnswerRagInputResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answerraginputs"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "user",
          "answerGenerationFlowInputs",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerGenerationFlowResponse"
      },
      "AnswerGenerationFlowSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "AnswerGenerationFlowSortFieldEnum"
      },
      "AnswerGenerationFlowUpdate": {
        "properties": {
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "applicationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessmenuitemid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "AnswerGenerationFlowUpdate"
      },
      "AnswerGenerationFlowUpdateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerGenerationFlowUpdateResponse"
      },
      "AnswerGenerationFlowsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AnswerGenerationFlowResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AnswerGenerationFlowsPagedResponse"
      },
      "AnswerGenerationRequest": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "title": "Learningrangeid"
          },
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "userId",
          "learningRangeId",
          "query"
        ],
        "title": "AnswerGenerationRequest"
      },
      "AnswerRagInputCreate": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "title": "Answergenerationflowid"
          },
          "preamble": {
            "type": "string",
            "title": "Preamble"
          }
        },
        "type": "object",
        "required": ["answerGenerationFlowId", "preamble"],
        "title": "AnswerRagInputCreate"
      },
      "AnswerRagInputCreateRequest": {
        "properties": {
          "preamble": {
            "type": "string",
            "title": "Preamble"
          }
        },
        "type": "object",
        "required": ["preamble"],
        "title": "AnswerRagInputCreateRequest"
      },
      "AnswerRagInputResponse": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Answergenerationflowid"
          },
          "preamble": {
            "type": "string",
            "title": "Preamble"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "preamble",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "AnswerRagInputResponse"
      },
      "AnswerRagInputUpdate": {
        "properties": {
          "answerGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answergenerationflowid"
          },
          "preamble": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preamble"
          }
        },
        "type": "object",
        "title": "AnswerRagInputUpdate"
      },
      "ApplicationCreate": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "apiKey": {
            "type": "string",
            "title": "Apikey"
          }
        },
        "type": "object",
        "required": ["userId", "name", "url", "apiKey"],
        "title": "ApplicationCreate"
      },
      "ApplicationCreateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "apiKey": {
            "type": "string",
            "title": "Apikey"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "name",
          "url",
          "apiKey",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "ApplicationCreateResponse"
      },
      "ApplicationResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "apiKey": {
            "type": "string",
            "title": "Apikey"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponseWithoutRelations"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "name",
          "url",
          "apiKey",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "ApplicationResponse"
      },
      "ApplicationSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "ApplicationSortFieldEnum"
      },
      "ApplicationUpdate": {
        "properties": {
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "apiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Apikey"
          }
        },
        "type": "object",
        "title": "ApplicationUpdate"
      },
      "ApplicationUpdateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "apiKey": {
            "type": "string",
            "title": "Apikey"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "name",
          "url",
          "apiKey",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "ApplicationUpdateResponse"
      },
      "ApplicationsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ApplicationResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ApplicationsPagedResponse"
      },
      "Body_create_educational_material": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "learning_range_id": {
            "type": "string",
            "title": "Learning Range Id"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["title", "learning_range_id", "file"],
        "title": "Body_create_educational_material"
      },
      "Body_create_instagram_post_media": {
        "properties": {
          "instagram_post_id": {
            "type": "string",
            "title": "Instagram Post Id"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/InstagramPostMediaTypeEnum"
            },
            "type": "array",
            "title": "Types",
            "description": "SwaggerUIだと文字列の配列を認識できず動作しない。\n\nフロントからは文字列の配列を送信する。例：[\"IMAGE\", \"IMAGE\"]"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["instagram_post_id", "types", "files"],
        "title": "Body_create_instagram_post_media"
      },
      "Body_create_instagram_post_reservation": {
        "properties": {
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled At"
          },
          "category": {
            "$ref": "#/components/schemas/InstagramPostReservationCategoryEnum"
          },
          "teacher_id": {
            "type": "string",
            "title": "Teacher Id"
          },
          "caption": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/InstagramPostMediaTypeEnum"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Types",
            "description": "SwaggerUIだと文字列の配列を認識できず動作しない。\n\nフロントからは文字列の配列を送信する。例：[\"IMAGE\", \"IMAGE\"]"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "scheduled_at",
          "category",
          "teacher_id",
          "types",
          "files"
        ],
        "title": "Body_create_instagram_post_reservation"
      },
      "Body_create_teacher_rag_data": {
        "properties": {
          "teacher_id": {
            "type": "string",
            "title": "Teacher Id"
          },
          "titles": {
            "type": "string",
            "title": "Titles",
            "description": "カンマ区切りのタイトルリスト。例: [\"タイトル1\", \"タイトル2\"]"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["teacher_id", "titles", "files"],
        "title": "Body_create_teacher_rag_data"
      },
      "Body_create_x_post_media": {
        "properties": {
          "x_post_id": {
            "type": "string",
            "title": "X Post Id"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["x_post_id", "files"],
        "title": "Body_create_x_post_media"
      },
      "Body_create_x_post_reservation": {
        "properties": {
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled At"
          },
          "category": {
            "$ref": "#/components/schemas/XPostReservationCategoryEnum"
          },
          "teacher_id": {
            "type": "string",
            "title": "Teacher Id"
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["scheduled_at", "category", "teacher_id"],
        "title": "Body_create_x_post_reservation"
      },
      "Body_update_educational_material": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          }
        },
        "type": "object",
        "title": "Body_update_educational_material"
      },
      "Body_update_instagram_post_media": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_update_instagram_post_media"
      },
      "Body_update_teacher_rag_data": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File"
          }
        },
        "type": "object",
        "title": "Body_update_teacher_rag_data"
      },
      "Body_update_x_post_media": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_update_x_post_media"
      },
      "BusinessMenuCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BusinessMenuTypeEnum"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "divisionId": {
            "type": "string",
            "title": "Divisionid"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          }
        },
        "type": "object",
        "required": ["type", "name", "divisionId", "icon", "order"],
        "title": "BusinessMenuCreate"
      },
      "BusinessMenuItemCreate": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "businessMenuId": {
            "type": "string",
            "title": "Businessmenuid"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          }
        },
        "type": "object",
        "required": ["type", "name", "businessMenuId", "icon", "order"],
        "title": "BusinessMenuItemCreate"
      },
      "BusinessMenuItemResponse": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "businessMenuId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuid"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "businessMenuId",
          "icon",
          "order",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "BusinessMenuItemResponse"
      },
      "BusinessMenuItemUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "businessMenuId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessmenuid"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "title": "BusinessMenuItemUpdate"
      },
      "BusinessMenuResponse": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BusinessMenuTypeEnum"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "divisionId": {
            "type": "string",
            "format": "uuid",
            "title": "Divisionid"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "divisionId",
          "icon",
          "order",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "BusinessMenuResponse"
      },
      "BusinessMenuTypeEnum": {
        "type": "string",
        "enum": [
          "TEXT",
          "QUESTION",
          "ANSWER",
          "ESSAY_CORRECTION",
          "WEBSITE_POSTING",
          "SNS"
        ],
        "title": "BusinessMenuTypeEnum"
      },
      "BusinessMenuUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BusinessMenuTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "divisionId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Divisionid"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "title": "BusinessMenuUpdate"
      },
      "CourseCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "CourseCreate"
      },
      "CourseResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "CourseResponse"
      },
      "CourseUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "CourseUpdate"
      },
      "DepartmentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "DepartmentCreate"
      },
      "DepartmentResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "DepartmentResponse"
      },
      "DepartmentUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "DepartmentUpdate"
      },
      "DivisionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentId": {
            "type": "string",
            "title": "Departmentid"
          }
        },
        "type": "object",
        "required": ["name", "departmentId"],
        "title": "DivisionCreate"
      },
      "DivisionCreateResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid",
            "title": "Departmentid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["name", "departmentId", "id"],
        "title": "DivisionCreateResponse"
      },
      "DivisionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid",
            "title": "Departmentid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "department": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DepartmentResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["name", "departmentId", "id", "createdAt", "updatedAt"],
        "title": "DivisionResponse"
      },
      "DivisionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "departmentId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departmentid"
          }
        },
        "type": "object",
        "title": "DivisionUpdate"
      },
      "DivisionUpdateResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid",
            "title": "Departmentid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["name", "departmentId", "id"],
        "title": "DivisionUpdateResponse"
      },
      "EducationalMaterialResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "fileUrl": {
            "type": "string",
            "title": "Fileurl"
          },
          "learningRangeId": {
            "type": "string",
            "format": "uuid",
            "title": "Learningrangeid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "title",
          "fileUrl",
          "learningRangeId",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "EducationalMaterialResponse"
      },
      "EducationalMaterialVertexRequest": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question"
          }
        },
        "type": "object",
        "required": ["question"],
        "title": "EducationalMaterialVertexRequest"
      },
      "GeneratedAnswerCreateRequest": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "type": "string",
            "title": "Ragprompt"
          },
          "ragOutput": {
            "type": "string",
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "generatedAnswerResults": {
            "items": {
              "$ref": "#/components/schemas/GeneratedAnswerResultCreateRequest"
            },
            "type": "array",
            "title": "Generatedanswerresults"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "userId",
          "learningRangeId",
          "ragPrompt",
          "ragOutput",
          "query",
          "generatedAnswerResults"
        ],
        "title": "GeneratedAnswerCreateRequest"
      },
      "GeneratedAnswerCreateResponse": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "format": "uuid",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "type": "string",
            "title": "Ragprompt"
          },
          "ragOutput": {
            "type": "string",
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "userId",
          "learningRangeId",
          "ragPrompt",
          "ragOutput",
          "query",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedAnswerCreateResponse"
      },
      "GeneratedAnswerResponse": {
        "properties": {
          "answerGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Answergenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "format": "uuid",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "type": "string",
            "title": "Ragprompt"
          },
          "ragOutput": {
            "type": "string",
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "generatedAnswerResults": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedAnswerResultResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generatedanswerresults"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "answerGenerationFlowId",
          "userId",
          "learningRangeId",
          "ragPrompt",
          "ragOutput",
          "query",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedAnswerResponse"
      },
      "GeneratedAnswerResultCreateRequest": {
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          }
        },
        "type": "object",
        "required": ["result"],
        "title": "GeneratedAnswerResultCreateRequest"
      },
      "GeneratedAnswerResultResponse": {
        "properties": {
          "generatedAnswerId": {
            "type": "string",
            "format": "uuid",
            "title": "Generatedanswerid"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "generatedAnswerId",
          "result",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedAnswerResultResponse"
      },
      "GeneratedAnswerSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "rag_prompt", "query"],
        "title": "GeneratedAnswerSortFieldEnum"
      },
      "GeneratedAnswersPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedAnswerResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "GeneratedAnswersPagedResponse"
      },
      "GeneratedQuestionCreateRequest": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragprompt"
          },
          "ragOutput": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "generatedQuestionResults": {
            "items": {
              "$ref": "#/components/schemas/GeneratedQuestionResultCreateRequest"
            },
            "type": "array",
            "title": "Generatedquestionresults"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "userId",
          "learningRangeId",
          "query",
          "generatedQuestionResults"
        ],
        "title": "GeneratedQuestionCreateRequest"
      },
      "GeneratedQuestionCreateResponse": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "format": "uuid",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragprompt"
          },
          "ragOutput": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "userId",
          "learningRangeId",
          "query",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedQuestionCreateResponse"
      },
      "GeneratedQuestionResponse": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "format": "uuid",
            "title": "Learningrangeid"
          },
          "ragPrompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragprompt"
          },
          "ragOutput": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ragoutput"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "generatedQuestionResults": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedQuestionResultResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generatedquestionresults"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "userId",
          "learningRangeId",
          "query",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedQuestionResponse"
      },
      "GeneratedQuestionResultCreateRequest": {
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          }
        },
        "type": "object",
        "required": ["result"],
        "title": "GeneratedQuestionResultCreateRequest"
      },
      "GeneratedQuestionResultResponse": {
        "properties": {
          "generatedQuestionId": {
            "type": "string",
            "format": "uuid",
            "title": "Generatedquestionid"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "generatedQuestionId",
          "result",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedQuestionResultResponse"
      },
      "GeneratedQuestionSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "rag_prompt", "query"],
        "title": "GeneratedQuestionSortFieldEnum"
      },
      "GeneratedQuestionsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedQuestionResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "GeneratedQuestionsPagedResponse"
      },
      "GeneratedTextCreateRequest": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "learningLevel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learninglevel"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "dialect": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialect"
          },
          "generatedTextResults": {
            "items": {
              "$ref": "#/components/schemas/GeneratedTextResultCreateRequest"
            },
            "type": "array",
            "title": "Generatedtextresults"
          }
        },
        "type": "object",
        "required": [
          "textGenerationFlowId",
          "userId",
          "title",
          "generatedTextResults"
        ],
        "title": "GeneratedTextCreateRequest"
      },
      "GeneratedTextCreateResponse": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "learningLevel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learninglevel"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "dialect": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialect"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "textGenerationFlowId",
          "userId",
          "title",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedTextCreateResponse"
      },
      "GeneratedTextResponse": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "learningLevel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learninglevel"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "dialect": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialect"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "generatedTextResults": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedTextResultResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generatedtextresults"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "textGenerationFlowId",
          "userId",
          "title",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedTextResponse"
      },
      "GeneratedTextResultCreateRequest": {
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          }
        },
        "type": "object",
        "required": ["result"],
        "title": "GeneratedTextResultCreateRequest"
      },
      "GeneratedTextResultResponse": {
        "properties": {
          "generatedTextId": {
            "type": "string",
            "format": "uuid",
            "title": "Generatedtextid"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "generatedTextId",
          "result",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "GeneratedTextResultResponse"
      },
      "GeneratedTextSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "key"],
        "title": "GeneratedTextSortFieldEnum"
      },
      "GeneratedTextsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GeneratedTextResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "GeneratedTextsPagedResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InstagramPostMediaResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "type": {
            "$ref": "#/components/schemas/InstagramPostMediaTypeEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "instagramPostId": {
            "type": "string",
            "format": "uuid",
            "title": "Instagrampostid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "url",
          "type",
          "id",
          "instagramPostId",
          "createdAt",
          "updatedAt"
        ],
        "title": "InstagramPostMediaResponse"
      },
      "InstagramPostMediaTypeEnum": {
        "type": "string",
        "enum": ["IMAGE", "VIDEO", "IMAGE_STORY", "VIDEO_STORY"],
        "title": "InstagramPostMediaTypeEnum"
      },
      "InstagramPostReservationCategoryEnum": {
        "type": "string",
        "enum": ["STUDY", "EXAM_INFO", "PRIVATE", "OTHER"],
        "title": "InstagramPostReservationCategoryEnum"
      },
      "InstagramPostReservationCreateResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/InstagramPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/InstagramPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["status", "category", "id", "createdAt", "updatedAt"],
        "title": "InstagramPostReservationCreateResponse"
      },
      "InstagramPostReservationResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/InstagramPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/InstagramPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "instagramPost": {
            "$ref": "#/components/schemas/InstagramPostResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "status",
          "category",
          "id",
          "instagramPost",
          "createdAt",
          "updatedAt"
        ],
        "title": "InstagramPostReservationResponse"
      },
      "InstagramPostReservationStatusEnum": {
        "type": "string",
        "enum": ["SUCCESS", "FAILED", "NOT_EXECUTE"],
        "title": "InstagramPostReservationStatusEnum"
      },
      "InstagramPostReservationUpdate": {
        "properties": {
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InstagramPostReservationCategoryEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "InstagramPostReservationUpdate"
      },
      "InstagramPostReservationUpdateResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/InstagramPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/InstagramPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["status", "category", "id", "createdAt", "updatedAt"],
        "title": "InstagramPostReservationUpdateResponse"
      },
      "InstagramPostReservationsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InstagramPostReservationResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "InstagramPostReservationsPagedResponse"
      },
      "InstagramPostReservationsSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "InstagramPostReservationsSortFieldEnum"
      },
      "InstagramPostResponse": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "teacherId": {
            "type": "string",
            "format": "uuid",
            "title": "Teacherid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "instagramPostMedia": {
            "items": {
              "$ref": "#/components/schemas/InstagramPostMediaResponse"
            },
            "type": "array",
            "title": "Instagrampostmedia"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "teacherId",
          "id",
          "instagramPostMedia",
          "createdAt",
          "updatedAt"
        ],
        "title": "InstagramPostResponse"
      },
      "InstagramPostUpdate": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          }
        },
        "type": "object",
        "title": "InstagramPostUpdate"
      },
      "InstagramPostUpdateResponse": {
        "properties": {
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          },
          "teacherId": {
            "type": "string",
            "format": "uuid",
            "title": "Teacherid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["teacherId", "id", "createdAt", "updatedAt"],
        "title": "InstagramPostUpdateResponse"
      },
      "InstagramRequest": {
        "properties": {
          "mediaItems": {
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            },
            "type": "array",
            "minItems": 1,
            "title": "Mediaitems"
          },
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption"
          }
        },
        "type": "object",
        "required": ["mediaItems"],
        "title": "InstagramRequest"
      },
      "InstagramResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "InstagramResponse"
      },
      "LearningRangeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subjectId": {
            "type": "string",
            "title": "Subjectid"
          }
        },
        "type": "object",
        "required": ["name", "subjectId"],
        "title": "LearningRangeCreate"
      },
      "LearningRangeResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subjectId": {
            "type": "string",
            "format": "uuid",
            "title": "Subjectid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["name", "subjectId", "id", "createdAt", "updatedAt"],
        "title": "LearningRangeResponse"
      },
      "LearningRangeUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "subjectId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subjectid"
          }
        },
        "type": "object",
        "title": "LearningRangeUpdate"
      },
      "MediaItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "mediaUrl": {
            "type": "string",
            "title": "Mediaurl"
          },
          "type": {
            "type": "string",
            "enum": ["IMAGE", "VIDEO", "IMAGE_STORY", "VIDEO_STORY"],
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["id", "mediaUrl", "type"],
        "title": "MediaItem"
      },
      "PagingMeta": {
        "properties": {
          "currentPage": {
            "type": "integer",
            "title": "Currentpage"
          },
          "totalPageCount": {
            "type": "integer",
            "title": "Totalpagecount"
          },
          "totalDataCount": {
            "type": "integer",
            "title": "Totaldatacount"
          },
          "perPage": {
            "type": "integer",
            "title": "Perpage"
          }
        },
        "type": "object",
        "required": [
          "currentPage",
          "totalPageCount",
          "totalDataCount",
          "perPage"
        ],
        "title": "PagingMeta"
      },
      "QuestionContentCreate": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          }
        },
        "type": "object",
        "required": ["questionGenerationFlowId", "userId", "body"],
        "title": "QuestionContentCreate"
      },
      "QuestionContentResponse": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "userId",
          "body",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionContentResponse"
      },
      "QuestionContentSortFieldEnum": {
        "const": "created_at",
        "title": "QuestionContentSortFieldEnum"
      },
      "QuestionContentUpdate": {
        "properties": {
          "questionGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "title": "QuestionContentUpdate"
      },
      "QuestionContentsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/QuestionContentResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "QuestionContentsPagedResponse"
      },
      "QuestionGenerationFlow": {
        "properties": {
          "businessMenuItemId": {
            "type": "string",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "questionGenerationFlowInputs": {
            "items": {
              "$ref": "#/components/schemas/QuestionGenerationFlowInputCreateRequest"
            },
            "type": "array",
            "title": "Questiongenerationflowinputs"
          },
          "questionRagInput": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuestionRagInputCreateRequest"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "businessMenuItemId",
          "name",
          "questionGenerationFlowInputs"
        ],
        "title": "QuestionGenerationFlow"
      },
      "QuestionGenerationFlowCreateRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "title": "Applicationid"
          },
          "flows": {
            "items": {
              "$ref": "#/components/schemas/QuestionGenerationFlow"
            },
            "type": "array",
            "title": "Flows"
          }
        },
        "type": "object",
        "required": ["userId", "applicationId", "flows"],
        "title": "QuestionGenerationFlowCreateRequest"
      },
      "QuestionGenerationFlowCreateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionGenerationFlowCreateResponse"
      },
      "QuestionGenerationFlowInputCreate": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "title": "Questiongenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["questionGenerationFlowId", "key", "value"],
        "title": "QuestionGenerationFlowInputCreate"
      },
      "QuestionGenerationFlowInputCreateRequest": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["key", "value"],
        "title": "QuestionGenerationFlowInputCreateRequest"
      },
      "QuestionGenerationFlowInputResponse": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Questiongenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "key",
          "value",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionGenerationFlowInputResponse"
      },
      "QuestionGenerationFlowInputUpdate": {
        "properties": {
          "questionGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Questiongenerationflowid"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "title": "QuestionGenerationFlowInputUpdate"
      },
      "QuestionGenerationFlowResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponseWithoutRelations"
          },
          "questionGenerationFlowInputs": {
            "items": {
              "$ref": "#/components/schemas/QuestionGenerationFlowInputResponse"
            },
            "type": "array",
            "title": "Questiongenerationflowinputs"
          },
          "questionRagInputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/QuestionRagInputResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Questionraginputs"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "user",
          "questionGenerationFlowInputs",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionGenerationFlowResponse"
      },
      "QuestionGenerationFlowSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "QuestionGenerationFlowSortFieldEnum"
      },
      "QuestionGenerationFlowUpdate": {
        "properties": {
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "applicationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessmenuitemid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "QuestionGenerationFlowUpdate"
      },
      "QuestionGenerationFlowUpdateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionGenerationFlowUpdateResponse"
      },
      "QuestionGenerationFlowsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/QuestionGenerationFlowResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "QuestionGenerationFlowsPagedResponse"
      },
      "QuestionGenerationRequest": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "title": "Questiongenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "learningRangeId": {
            "type": "string",
            "title": "Learningrangeid"
          },
          "query": {
            "type": "string",
            "title": "Query"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "userId",
          "learningRangeId",
          "query"
        ],
        "title": "QuestionGenerationRequest"
      },
      "QuestionRagInputCreate": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "title": "Questiongenerationflowid"
          },
          "preamble": {
            "type": "string",
            "title": "Preamble"
          }
        },
        "type": "object",
        "required": ["questionGenerationFlowId", "preamble"],
        "title": "QuestionRagInputCreate"
      },
      "QuestionRagInputCreateRequest": {
        "properties": {
          "preamble": {
            "type": "string",
            "title": "Preamble"
          }
        },
        "type": "object",
        "required": ["preamble"],
        "title": "QuestionRagInputCreateRequest"
      },
      "QuestionRagInputResponse": {
        "properties": {
          "questionGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Questiongenerationflowid"
          },
          "preamble": {
            "type": "string",
            "title": "Preamble"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "questionGenerationFlowId",
          "preamble",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "QuestionRagInputResponse"
      },
      "QuestionRagInputUpdate": {
        "properties": {
          "questionGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Questiongenerationflowid"
          },
          "preamble": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preamble"
          }
        },
        "type": "object",
        "title": "QuestionRagInputUpdate"
      },
      "RequestInfoResponse": {
        "properties": {
          "ipAddress": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ipaddress"
          },
          "host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host"
          }
        },
        "type": "object",
        "required": ["ipAddress", "host"],
        "title": "RequestInfoResponse"
      },
      "SortDirectionEnum": {
        "type": "string",
        "enum": ["asc", "desc"],
        "title": "SortDirectionEnum"
      },
      "SubjectCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "courseId": {
            "type": "string",
            "title": "Courseid"
          }
        },
        "type": "object",
        "required": ["name", "courseId"],
        "title": "SubjectCreate"
      },
      "SubjectResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "courseId": {
            "type": "string",
            "format": "uuid",
            "title": "Courseid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["name", "courseId", "id", "createdAt", "updatedAt"],
        "title": "SubjectResponse"
      },
      "SubjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "courseId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courseid"
          }
        },
        "type": "object",
        "title": "SubjectUpdate"
      },
      "TeacherCreate": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "specialityArea": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialityarea"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UrlItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "instagramAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramaccesstoken"
          },
          "instagramUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramuserid"
          },
          "xApiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikey"
          },
          "xApiKeySecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikeysecret"
          },
          "xAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstoken"
          },
          "xAccessTokenSecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstokensecret"
          },
          "courseIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courseids"
          }
        },
        "type": "object",
        "required": ["userId", "name"],
        "title": "TeacherCreate"
      },
      "TeacherCreateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "specialityArea": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialityarea"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UrlItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "instagramAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramaccesstoken"
          },
          "instagramUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramuserid"
          },
          "xApiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikey"
          },
          "xApiKeySecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikeysecret"
          },
          "xAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstoken"
          },
          "xAccessTokenSecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstokensecret"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["userId", "name", "id", "createdAt", "updatedAt"],
        "title": "TeacherCreateResponse"
      },
      "TeacherRagDataResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "fileUrl": {
            "type": "string",
            "title": "Fileurl"
          },
          "teacherId": {
            "type": "string",
            "format": "uuid",
            "title": "Teacherid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "title",
          "fileUrl",
          "teacherId",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TeacherRagDataResponse"
      },
      "TeacherResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "specialityArea": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialityarea"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UrlItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "instagramAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramaccesstoken"
          },
          "instagramUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramuserid"
          },
          "xApiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikey"
          },
          "xApiKeySecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikeysecret"
          },
          "xAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstoken"
          },
          "xAccessTokenSecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstokensecret"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "courses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["userId", "name", "id", "createdAt", "updatedAt"],
        "title": "TeacherResponse"
      },
      "TeacherUpdate": {
        "properties": {
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "specialityArea": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialityarea"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UrlItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "instagramAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramaccesstoken"
          },
          "instagramUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramuserid"
          },
          "xApiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikey"
          },
          "xApiKeySecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikeysecret"
          },
          "xAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstoken"
          },
          "xAccessTokenSecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstokensecret"
          }
        },
        "type": "object",
        "title": "TeacherUpdate"
      },
      "TeacherUpdateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "biography": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biography"
          },
          "specialityArea": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialityarea"
          },
          "urls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UrlItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "instagramAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramaccesstoken"
          },
          "instagramUserId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagramuserid"
          },
          "xApiKey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikey"
          },
          "xApiKeySecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xapikeysecret"
          },
          "xAccessToken": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstoken"
          },
          "xAccessTokenSecret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xaccesstokensecret"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["userId", "name", "id", "createdAt", "updatedAt"],
        "title": "TeacherUpdateResponse"
      },
      "TeacherVertexRequest": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question"
          }
        },
        "type": "object",
        "required": ["question"],
        "title": "TeacherVertexRequest"
      },
      "TextContentCreate": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          }
        },
        "type": "object",
        "required": ["textGenerationFlowId", "userId", "body"],
        "title": "TextContentCreate"
      },
      "TextContentResponse": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "textGenerationFlowId",
          "userId",
          "body",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TextContentResponse"
      },
      "TextContentSortFieldEnum": {
        "const": "created_at",
        "title": "TextContentSortFieldEnum"
      },
      "TextContentUpdate": {
        "properties": {
          "textGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Textgenerationflowid"
          },
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "title": "TextContentUpdate"
      },
      "TextContentsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TextContentResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TextContentsPagedResponse"
      },
      "TextGenerationFlow": {
        "properties": {
          "businessMenuItemId": {
            "type": "string",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "textGenerationFlowInputs": {
            "items": {
              "$ref": "#/components/schemas/TextGenerationFlowInputCreateRequest"
            },
            "type": "array",
            "title": "Textgenerationflowinputs"
          }
        },
        "type": "object",
        "required": ["businessMenuItemId", "name", "textGenerationFlowInputs"],
        "title": "TextGenerationFlow"
      },
      "TextGenerationFlowCreateRequest": {
        "properties": {
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "title": "Applicationid"
          },
          "flows": {
            "items": {
              "$ref": "#/components/schemas/TextGenerationFlow"
            },
            "type": "array",
            "title": "Flows"
          }
        },
        "type": "object",
        "required": ["userId", "applicationId", "flows"],
        "title": "TextGenerationFlowCreateRequest"
      },
      "TextGenerationFlowCreateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TextGenerationFlowCreateResponse"
      },
      "TextGenerationFlowInputCreate": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "title": "Textgenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["textGenerationFlowId", "key", "value"],
        "title": "TextGenerationFlowInputCreate"
      },
      "TextGenerationFlowInputCreateRequest": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["key", "value"],
        "title": "TextGenerationFlowInputCreateRequest"
      },
      "TextGenerationFlowInputResponse": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "format": "uuid",
            "title": "Textgenerationflowid"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "textGenerationFlowId",
          "key",
          "value",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TextGenerationFlowInputResponse"
      },
      "TextGenerationFlowInputUpdate": {
        "properties": {
          "textGenerationFlowId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Textgenerationflowid"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "title": "TextGenerationFlowInputUpdate"
      },
      "TextGenerationFlowResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponseWithoutRelations"
              },
              {
                "type": "null"
              }
            ]
          },
          "textGenerationFlowInputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TextGenerationFlowInputResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Textgenerationflowinputs"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TextGenerationFlowResponse"
      },
      "TextGenerationFlowSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "TextGenerationFlowSortFieldEnum"
      },
      "TextGenerationFlowUpdate": {
        "properties": {
          "userId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          },
          "applicationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessmenuitemid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "TextGenerationFlowUpdate"
      },
      "TextGenerationFlowUpdateResponse": {
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "Userid"
          },
          "applicationId": {
            "type": "string",
            "format": "uuid",
            "title": "Applicationid"
          },
          "businessMenuItemId": {
            "type": "string",
            "format": "uuid",
            "title": "Businessmenuitemid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "applicationId",
          "businessMenuItemId",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ],
        "title": "TextGenerationFlowUpdateResponse"
      },
      "TextGenerationFlowsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TextGenerationFlowResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TextGenerationFlowsPagedResponse"
      },
      "TextGenerationRequest": {
        "properties": {
          "textGenerationFlowId": {
            "type": "string",
            "title": "Textgenerationflowid"
          },
          "userId": {
            "type": "string",
            "title": "Userid"
          },
          "query": {
            "type": "string",
            "title": "Query"
          },
          "learningLevel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Learninglevel"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "dialect": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialect"
          }
        },
        "type": "object",
        "required": ["textGenerationFlowId", "userId", "query"],
        "title": "TextGenerationRequest"
      },
      "UrlItem": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": ["name", "url"],
        "title": "UrlItem"
      },
      "UserCreateRequest": {
        "properties": {
          "uid": {
            "type": "string",
            "title": "Uid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "divisionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Divisionids"
          }
        },
        "type": "object",
        "required": ["uid", "name"],
        "title": "UserCreateRequest"
      },
      "UserCreateResponse": {
        "properties": {
          "uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "UserCreateResponse"
      },
      "UserResponse": {
        "properties": {
          "uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "divisions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DivisionResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Divisions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "UserResponse"
      },
      "UserResponseWithoutRelations": {
        "properties": {
          "uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "UserResponseWithoutRelations"
      },
      "UserSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "UserSortFieldEnum"
      },
      "UserUpdateRequest": {
        "properties": {
          "uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "divisionIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Divisionids"
          }
        },
        "type": "object",
        "title": "UserUpdateRequest"
      },
      "UserUpdateResponse": {
        "properties": {
          "uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["id", "createdAt", "updatedAt"],
        "title": "UserUpdateResponse"
      },
      "UsersPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UsersPagedResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "XPostMediaResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "xPostId": {
            "type": "string",
            "format": "uuid",
            "title": "Xpostid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["url", "id", "xPostId", "createdAt", "updatedAt"],
        "title": "XPostMediaResponse"
      },
      "XPostReservationCategoryEnum": {
        "type": "string",
        "enum": ["STUDY", "EXAM_INFO", "PRIVATE", "OTHER"],
        "title": "XPostReservationCategoryEnum"
      },
      "XPostReservationCreateResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/XPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/XPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["status", "category", "id", "createdAt", "updatedAt"],
        "title": "XPostReservationCreateResponse"
      },
      "XPostReservationResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/XPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/XPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "xPost": {
            "$ref": "#/components/schemas/XPostResponse"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": [
          "status",
          "category",
          "id",
          "xPost",
          "createdAt",
          "updatedAt"
        ],
        "title": "XPostReservationResponse"
      },
      "XPostReservationStatusEnum": {
        "type": "string",
        "enum": ["SUCCESS", "FAILED", "NOT_EXECUTE"],
        "title": "XPostReservationStatusEnum"
      },
      "XPostReservationUpdate": {
        "properties": {
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/XPostReservationCategoryEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "XPostReservationUpdate"
      },
      "XPostReservationUpdateResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/XPostReservationStatusEnum"
          },
          "errorMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errormessage"
          },
          "postUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posturl"
          },
          "scheduledAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduledat"
          },
          "postedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postedat"
          },
          "category": {
            "$ref": "#/components/schemas/XPostReservationCategoryEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["status", "category", "id", "createdAt", "updatedAt"],
        "title": "XPostReservationUpdateResponse"
      },
      "XPostReservationsPagedResponse": {
        "properties": {
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/XPostReservationResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": []
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "XPostReservationsPagedResponse"
      },
      "XPostReservationsSortFieldEnum": {
        "type": "string",
        "enum": ["created_at", "name"],
        "title": "XPostReservationsSortFieldEnum"
      },
      "XPostResponse": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "teacherId": {
            "type": "string",
            "format": "uuid",
            "title": "Teacherid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "xPostMedia": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/XPostMediaResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xpostmedia"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["teacherId", "id", "createdAt", "updatedAt"],
        "title": "XPostResponse"
      },
      "XPostUpdate": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "type": "object",
        "title": "XPostUpdate"
      },
      "XPostUpdateResponse": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "teacherId": {
            "type": "string",
            "format": "uuid",
            "title": "Teacherid"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "deletedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletedat"
          }
        },
        "type": "object",
        "required": ["teacherId", "id", "createdAt", "updatedAt"],
        "title": "XPostUpdateResponse"
      },
      "XRequest": {
        "properties": {
          "mediaUrls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Mediaurls"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "type": "object",
        "title": "XRequest"
      }
    }
  }
}
